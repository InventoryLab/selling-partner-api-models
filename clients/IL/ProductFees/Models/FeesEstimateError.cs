// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.ProductFees.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// An unexpected error occurred during this operation.
    /// </summary>
    public partial class FeesEstimateError
    {
        /// <summary>
        /// Initializes a new instance of the FeesEstimateError class.
        /// </summary>
        public FeesEstimateError()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FeesEstimateError class.
        /// </summary>
        /// <param name="type">An error type, identifying either the receiver
        /// or the sender as the originator of the error.</param>
        /// <param name="code">An error code that identifies the type of error
        /// that occurred.</param>
        /// <param name="message">A message that describes the error
        /// condition.</param>
        public FeesEstimateError(string type, string code, string message, IList<object> detail)
        {
            Type = type;
            Code = code;
            Message = message;
            Detail = detail;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets an error type, identifying either the receiver or the
        /// sender as the originator of the error.
        /// </summary>
        [JsonProperty(PropertyName = "Type")]
        public string Type { get; set; }

        /// <summary>
        /// Gets or sets an error code that identifies the type of error that
        /// occurred.
        /// </summary>
        [JsonProperty(PropertyName = "Code")]
        public string Code { get; set; }

        /// <summary>
        /// Gets or sets a message that describes the error condition.
        /// </summary>
        [JsonProperty(PropertyName = "Message")]
        public string Message { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Detail")]
        public IList<object> Detail { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Type == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Type");
            }
            if (Code == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Code");
            }
            if (Message == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Message");
            }
            if (Detail == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Detail");
            }
        }
    }
}

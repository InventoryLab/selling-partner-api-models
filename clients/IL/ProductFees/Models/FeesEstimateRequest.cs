// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.ProductFees.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class FeesEstimateRequest
    {
        /// <summary>
        /// Initializes a new instance of the FeesEstimateRequest class.
        /// </summary>
        public FeesEstimateRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FeesEstimateRequest class.
        /// </summary>
        /// <param name="marketplaceId">A marketplace identifier.</param>
        /// <param name="priceToEstimateFees">The product price that the fee
        /// estimate is based on.</param>
        /// <param name="identifier">A unique identifier provided by the caller
        /// to track this request.</param>
        /// <param name="isAmazonFulfilled">When true, the offer is fulfilled
        /// by Amazon.</param>
        /// <param name="optionalFulfillmentProgram">Possible values include:
        /// 'FBA_CORE', 'FBA_SNL', 'FBA_EFN'</param>
        public FeesEstimateRequest(string marketplaceId, PriceToEstimateFees priceToEstimateFees, string identifier, bool? isAmazonFulfilled = default(bool?), string optionalFulfillmentProgram = default(string))
        {
            MarketplaceId = marketplaceId;
            IsAmazonFulfilled = isAmazonFulfilled;
            PriceToEstimateFees = priceToEstimateFees;
            Identifier = identifier;
            OptionalFulfillmentProgram = optionalFulfillmentProgram;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets a marketplace identifier.
        /// </summary>
        [JsonProperty(PropertyName = "MarketplaceId")]
        public string MarketplaceId { get; set; }

        /// <summary>
        /// Gets or sets when true, the offer is fulfilled by Amazon.
        /// </summary>
        [JsonProperty(PropertyName = "IsAmazonFulfilled")]
        public bool? IsAmazonFulfilled { get; set; }

        /// <summary>
        /// Gets or sets the product price that the fee estimate is based on.
        /// </summary>
        [JsonProperty(PropertyName = "PriceToEstimateFees")]
        public PriceToEstimateFees PriceToEstimateFees { get; set; }

        /// <summary>
        /// Gets or sets a unique identifier provided by the caller to track
        /// this request.
        /// </summary>
        [JsonProperty(PropertyName = "Identifier")]
        public string Identifier { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'FBA_CORE', 'FBA_SNL',
        /// 'FBA_EFN'
        /// </summary>
        [JsonProperty(PropertyName = "OptionalFulfillmentProgram")]
        public string OptionalFulfillmentProgram { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (MarketplaceId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "MarketplaceId");
            }
            if (PriceToEstimateFees == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PriceToEstimateFees");
            }
            if (Identifier == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Identifier");
            }
            if (PriceToEstimateFees != null)
            {
                PriceToEstimateFees.Validate();
            }
        }
    }
}

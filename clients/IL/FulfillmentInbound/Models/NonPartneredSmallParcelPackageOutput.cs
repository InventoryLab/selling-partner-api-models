// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.FulfillmentInbound.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Carrier, tracking number, and status information for the package.
    /// </summary>
    public partial class NonPartneredSmallParcelPackageOutput
    {
        /// <summary>
        /// Initializes a new instance of the
        /// NonPartneredSmallParcelPackageOutput class.
        /// </summary>
        public NonPartneredSmallParcelPackageOutput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// NonPartneredSmallParcelPackageOutput class.
        /// </summary>
        /// <param name="carrierName">The carrier that you are using for the
        /// inbound shipment.</param>
        /// <param name="packageStatus">Possible values include: 'SHIPPED',
        /// 'IN_TRANSIT', 'DELIVERED', 'CHECKED_IN', 'RECEIVING', 'CLOSED',
        /// 'DELETED'</param>
        public NonPartneredSmallParcelPackageOutput(string carrierName, string trackingId, string packageStatus)
        {
            CarrierName = carrierName;
            TrackingId = trackingId;
            PackageStatus = packageStatus;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the carrier that you are using for the inbound
        /// shipment.
        /// </summary>
        [JsonProperty(PropertyName = "CarrierName")]
        public string CarrierName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TrackingId")]
        public string TrackingId { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'SHIPPED', 'IN_TRANSIT',
        /// 'DELIVERED', 'CHECKED_IN', 'RECEIVING', 'CLOSED', 'DELETED'
        /// </summary>
        [JsonProperty(PropertyName = "PackageStatus")]
        public string PackageStatus { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (CarrierName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CarrierName");
            }
            if (TrackingId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "TrackingId");
            }
            if (PackageStatus == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PackageStatus");
            }
        }
    }
}

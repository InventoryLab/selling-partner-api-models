// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.FulfillmentInbound.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Item information used to create an inbound shipment. Returned by the
    /// createInboundShipmentPlan operation.
    /// </summary>
    public partial class InboundShipmentPlanItem
    {
        /// <summary>
        /// Initializes a new instance of the InboundShipmentPlanItem class.
        /// </summary>
        public InboundShipmentPlanItem()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the InboundShipmentPlanItem class.
        /// </summary>
        /// <param name="sellerSKU">The seller SKU of the item.</param>
        /// <param name="fulfillmentNetworkSKU">Amazon's fulfillment network
        /// SKU of the item.</param>
        /// <param name="quantity">The item quantity that you are
        /// shipping.</param>
        public InboundShipmentPlanItem(string sellerSKU, string fulfillmentNetworkSKU, int quantity, IList<PrepDetails> prepDetailsList = default(IList<PrepDetails>))
        {
            SellerSKU = sellerSKU;
            FulfillmentNetworkSKU = fulfillmentNetworkSKU;
            Quantity = quantity;
            PrepDetailsList = prepDetailsList;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the seller SKU of the item.
        /// </summary>
        [JsonProperty(PropertyName = "SellerSKU")]
        public string SellerSKU { get; set; }

        /// <summary>
        /// Gets or sets amazon's fulfillment network SKU of the item.
        /// </summary>
        [JsonProperty(PropertyName = "FulfillmentNetworkSKU")]
        public string FulfillmentNetworkSKU { get; set; }

        /// <summary>
        /// Gets or sets the item quantity that you are shipping.
        /// </summary>
        [JsonProperty(PropertyName = "Quantity")]
        public int Quantity { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PrepDetailsList")]
        public IList<PrepDetails> PrepDetailsList { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (SellerSKU == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SellerSKU");
            }
            if (FulfillmentNetworkSKU == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FulfillmentNetworkSKU");
            }
            if (PrepDetailsList != null)
            {
                foreach (var element in PrepDetailsList)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}

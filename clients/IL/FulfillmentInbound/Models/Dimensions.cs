// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.FulfillmentInbound.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The dimension values and unit of measurement.
    /// </summary>
    public partial class Dimensions
    {
        /// <summary>
        /// Initializes a new instance of the Dimensions class.
        /// </summary>
        public Dimensions()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Dimensions class.
        /// </summary>
        /// <param name="length">The length dimension.</param>
        /// <param name="width">The width dimension.</param>
        /// <param name="height">The height dimension.</param>
        /// <param name="unit">The unit of measurement for the dimensions.
        /// Possible values include: 'inches', 'centimeters'</param>
        public Dimensions(double length, double width, double height, string unit)
        {
            Length = length;
            Width = width;
            Height = height;
            Unit = unit;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the length dimension.
        /// </summary>
        [JsonProperty(PropertyName = "Length")]
        public double Length { get; set; }

        /// <summary>
        /// Gets or sets the width dimension.
        /// </summary>
        [JsonProperty(PropertyName = "Width")]
        public double Width { get; set; }

        /// <summary>
        /// Gets or sets the height dimension.
        /// </summary>
        [JsonProperty(PropertyName = "Height")]
        public double Height { get; set; }

        /// <summary>
        /// Gets or sets the unit of measurement for the dimensions. Possible
        /// values include: 'inches', 'centimeters'
        /// </summary>
        [JsonProperty(PropertyName = "Unit")]
        public string Unit { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Unit == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Unit");
            }
        }
    }
}

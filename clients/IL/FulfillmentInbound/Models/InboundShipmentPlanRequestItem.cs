// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.FulfillmentInbound.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Item information for creating an inbound shipment plan. Submitted with
    /// a call to the createInboundShipmentPlan operation.
    /// </summary>
    public partial class InboundShipmentPlanRequestItem
    {
        /// <summary>
        /// Initializes a new instance of the InboundShipmentPlanRequestItem
        /// class.
        /// </summary>
        public InboundShipmentPlanRequestItem()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the InboundShipmentPlanRequestItem
        /// class.
        /// </summary>
        /// <param name="sellerSKU">The seller SKU of the item.</param>
        /// <param name="aSIN">The Amazon Standard Identification Number (ASIN)
        /// of the item.</param>
        /// <param name="condition">Possible values include: 'NewItem',
        /// 'NewWithWarranty', 'NewOEM', 'NewOpenBox', 'UsedLikeNew',
        /// 'UsedVeryGood', 'UsedGood', 'UsedAcceptable', 'UsedPoor',
        /// 'UsedRefurbished', 'CollectibleLikeNew', 'CollectibleVeryGood',
        /// 'CollectibleGood', 'CollectibleAcceptable', 'CollectiblePoor',
        /// 'RefurbishedWithWarranty', 'Refurbished', 'Club'</param>
        /// <param name="quantityInCase">The item quantity in each case, for
        /// case-packed items. Note that QuantityInCase multiplied by the
        /// number of cases in the inbound shipment equals Quantity. Also note
        /// that all of the boxes of an inbound shipment must either be case
        /// packed or individually packed. For that reason, when you submit the
        /// createInboundShipmentPlan operation, the value of QuantityInCase
        /// must be provided for every item in the shipment or for none of the
        /// items in the shipment.</param>
        public InboundShipmentPlanRequestItem(string sellerSKU, string aSIN, string condition, int quantity, int? quantityInCase = default(int?), IList<PrepDetails> prepDetailsList = default(IList<PrepDetails>))
        {
            SellerSKU = sellerSKU;
            ASIN = aSIN;
            Condition = condition;
            Quantity = quantity;
            QuantityInCase = quantityInCase;
            PrepDetailsList = prepDetailsList;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the seller SKU of the item.
        /// </summary>
        [JsonProperty(PropertyName = "SellerSKU")]
        public string SellerSKU { get; set; }

        /// <summary>
        /// Gets or sets the Amazon Standard Identification Number (ASIN) of
        /// the item.
        /// </summary>
        [JsonProperty(PropertyName = "ASIN")]
        public string ASIN { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'NewItem', 'NewWithWarranty',
        /// 'NewOEM', 'NewOpenBox', 'UsedLikeNew', 'UsedVeryGood', 'UsedGood',
        /// 'UsedAcceptable', 'UsedPoor', 'UsedRefurbished',
        /// 'CollectibleLikeNew', 'CollectibleVeryGood', 'CollectibleGood',
        /// 'CollectibleAcceptable', 'CollectiblePoor',
        /// 'RefurbishedWithWarranty', 'Refurbished', 'Club'
        /// </summary>
        [JsonProperty(PropertyName = "Condition")]
        public string Condition { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Quantity")]
        public int Quantity { get; set; }

        /// <summary>
        /// Gets or sets the item quantity in each case, for case-packed items.
        /// Note that QuantityInCase multiplied by the number of cases in the
        /// inbound shipment equals Quantity. Also note that all of the boxes
        /// of an inbound shipment must either be case packed or individually
        /// packed. For that reason, when you submit the
        /// createInboundShipmentPlan operation, the value of QuantityInCase
        /// must be provided for every item in the shipment or for none of the
        /// items in the shipment.
        /// </summary>
        [JsonProperty(PropertyName = "QuantityInCase")]
        public int? QuantityInCase { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PrepDetailsList")]
        public IList<PrepDetails> PrepDetailsList { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (SellerSKU == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SellerSKU");
            }
            if (ASIN == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ASIN");
            }
            if (Condition == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Condition");
            }
            if (PrepDetailsList != null)
            {
                foreach (var element in PrepDetailsList)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}

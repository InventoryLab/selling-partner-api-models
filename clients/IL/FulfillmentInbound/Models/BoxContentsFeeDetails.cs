// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.FulfillmentInbound.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The manual processing fee per unit and total fee for a shipment.
    /// </summary>
    public partial class BoxContentsFeeDetails
    {
        /// <summary>
        /// Initializes a new instance of the BoxContentsFeeDetails class.
        /// </summary>
        public BoxContentsFeeDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BoxContentsFeeDetails class.
        /// </summary>
        /// <param name="totalUnits">The number of units to ship.</param>
        /// <param name="feePerUnit">The manual processing fee per
        /// unit.</param>
        /// <param name="totalFee">The total manual processing fee for the
        /// shipment.</param>
        public BoxContentsFeeDetails(int? totalUnits = default(int?), Amount feePerUnit = default(Amount), Amount totalFee = default(Amount))
        {
            TotalUnits = totalUnits;
            FeePerUnit = feePerUnit;
            TotalFee = totalFee;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the number of units to ship.
        /// </summary>
        [JsonProperty(PropertyName = "TotalUnits")]
        public int? TotalUnits { get; set; }

        /// <summary>
        /// Gets or sets the manual processing fee per unit.
        /// </summary>
        [JsonProperty(PropertyName = "FeePerUnit")]
        public Amount FeePerUnit { get; set; }

        /// <summary>
        /// Gets or sets the total manual processing fee for the shipment.
        /// </summary>
        [JsonProperty(PropertyName = "TotalFee")]
        public Amount TotalFee { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (FeePerUnit != null)
            {
                FeePerUnit.Validate();
            }
            if (TotalFee != null)
            {
                TotalFee.Validate();
            }
        }
    }
}

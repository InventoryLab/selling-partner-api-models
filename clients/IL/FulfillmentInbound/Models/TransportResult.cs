// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.FulfillmentInbound.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The workflow status for a shipment with an Amazon-partnered carrier.
    /// </summary>
    public partial class TransportResult
    {
        /// <summary>
        /// Initializes a new instance of the TransportResult class.
        /// </summary>
        public TransportResult()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TransportResult class.
        /// </summary>
        /// <param name="transportStatus">Possible values include: 'WORKING',
        /// 'ESTIMATING', 'ESTIMATED', 'ERROR_ON_ESTIMATING', 'CONFIRMING',
        /// 'CONFIRMED', 'ERROR_ON_CONFIRMING', 'VOIDING', 'VOIDED',
        /// 'ERROR_IN_VOIDING', 'ERROR'</param>
        /// <param name="errorCode">An error code that identifies the type of
        /// error that occured.</param>
        /// <param name="errorDescription">A message that describes the error
        /// condition.</param>
        public TransportResult(string transportStatus, string errorCode = default(string), string errorDescription = default(string))
        {
            TransportStatus = transportStatus;
            ErrorCode = errorCode;
            ErrorDescription = errorDescription;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'WORKING', 'ESTIMATING',
        /// 'ESTIMATED', 'ERROR_ON_ESTIMATING', 'CONFIRMING', 'CONFIRMED',
        /// 'ERROR_ON_CONFIRMING', 'VOIDING', 'VOIDED', 'ERROR_IN_VOIDING',
        /// 'ERROR'
        /// </summary>
        [JsonProperty(PropertyName = "TransportStatus")]
        public string TransportStatus { get; set; }

        /// <summary>
        /// Gets or sets an error code that identifies the type of error that
        /// occured.
        /// </summary>
        [JsonProperty(PropertyName = "ErrorCode")]
        public string ErrorCode { get; set; }

        /// <summary>
        /// Gets or sets a message that describes the error condition.
        /// </summary>
        [JsonProperty(PropertyName = "ErrorDescription")]
        public string ErrorDescription { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (TransportStatus == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "TransportStatus");
            }
        }
    }
}

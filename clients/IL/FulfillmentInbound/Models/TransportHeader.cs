// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.FulfillmentInbound.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The shipping identifier, information about whether the shipment is by
    /// an Amazon-partnered carrier, and information about whether the shipment
    /// is Small Parcel or Less Than Truckload/Full Truckload (LTL/FTL).
    /// </summary>
    public partial class TransportHeader
    {
        /// <summary>
        /// Initializes a new instance of the TransportHeader class.
        /// </summary>
        public TransportHeader()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TransportHeader class.
        /// </summary>
        /// <param name="sellerId">The Amazon seller identifier.</param>
        /// <param name="shipmentId">A shipment identifier originally returned
        /// by the createInboundShipmentPlan operation.</param>
        /// <param name="isPartnered">Indicates whether a putTransportDetails
        /// request is for a partnered carrier.
        ///
        /// Possible values:
        ///
        /// * true – Request is for an Amazon-partnered carrier.
        ///
        /// * false – Request is for a non-Amazon-partnered carrier.</param>
        /// <param name="shipmentType">Possible values include: 'SP',
        /// 'LTL'</param>
        public TransportHeader(string sellerId, string shipmentId, bool isPartnered, string shipmentType)
        {
            SellerId = sellerId;
            ShipmentId = shipmentId;
            IsPartnered = isPartnered;
            ShipmentType = shipmentType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the Amazon seller identifier.
        /// </summary>
        [JsonProperty(PropertyName = "SellerId")]
        public string SellerId { get; set; }

        /// <summary>
        /// Gets or sets a shipment identifier originally returned by the
        /// createInboundShipmentPlan operation.
        /// </summary>
        [JsonProperty(PropertyName = "ShipmentId")]
        public string ShipmentId { get; set; }

        /// <summary>
        /// Gets or sets indicates whether a putTransportDetails request is for
        /// a partnered carrier.
        ///
        /// Possible values:
        ///
        /// * true – Request is for an Amazon-partnered carrier.
        ///
        /// * false – Request is for a non-Amazon-partnered carrier.
        /// </summary>
        [JsonProperty(PropertyName = "IsPartnered")]
        public bool IsPartnered { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'SP', 'LTL'
        /// </summary>
        [JsonProperty(PropertyName = "ShipmentType")]
        public string ShipmentType { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (SellerId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SellerId");
            }
            if (ShipmentId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ShipmentId");
            }
            if (ShipmentType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ShipmentType");
            }
        }
    }
}

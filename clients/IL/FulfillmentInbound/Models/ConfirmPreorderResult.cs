// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.FulfillmentInbound.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class ConfirmPreorderResult
    {
        /// <summary>
        /// Initializes a new instance of the ConfirmPreorderResult class.
        /// </summary>
        public ConfirmPreorderResult()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ConfirmPreorderResult class.
        /// </summary>
        /// <param name="confirmedNeedByDate">Date passed in with the
        /// NeedByDate parameter. The confirmed shipment must arrive at the
        /// Amazon fulfillment center by this date to avoid delivery promise
        /// breaks for pre-ordered items. In YYYY-MM-DD format.</param>
        /// <param name="confirmedFulfillableDate">Date that determines which
        /// pre-order items in the shipment are eligible for pre-order. The
        /// pre-order Buy Box will appear for any pre-order item in the
        /// shipment with a release date on or after this date. In YYYY-MM-DD
        /// format.</param>
        public ConfirmPreorderResult(System.DateTime? confirmedNeedByDate = default(System.DateTime?), System.DateTime? confirmedFulfillableDate = default(System.DateTime?))
        {
            ConfirmedNeedByDate = confirmedNeedByDate;
            ConfirmedFulfillableDate = confirmedFulfillableDate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets date passed in with the NeedByDate parameter. The
        /// confirmed shipment must arrive at the Amazon fulfillment center by
        /// this date to avoid delivery promise breaks for pre-ordered items.
        /// In YYYY-MM-DD format.
        /// </summary>
        [JsonConverter(typeof(DateJsonConverter))]
        [JsonProperty(PropertyName = "ConfirmedNeedByDate")]
        public System.DateTime? ConfirmedNeedByDate { get; set; }

        /// <summary>
        /// Gets or sets date that determines which pre-order items in the
        /// shipment are eligible for pre-order. The pre-order Buy Box will
        /// appear for any pre-order item in the shipment with a release date
        /// on or after this date. In YYYY-MM-DD format.
        /// </summary>
        [JsonConverter(typeof(DateJsonConverter))]
        [JsonProperty(PropertyName = "ConfirmedFulfillableDate")]
        public System.DateTime? ConfirmedFulfillableDate { get; set; }

    }
}

// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.FulfillmentInbound.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The request schema for an inbound shipment.
    /// </summary>
    public partial class InboundShipmentRequest
    {
        /// <summary>
        /// Initializes a new instance of the InboundShipmentRequest class.
        /// </summary>
        public InboundShipmentRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the InboundShipmentRequest class.
        /// </summary>
        /// <param name="marketplaceId">A marketplace identifier. Specifies the
        /// marketplace where the product would be stored.</param>
        public InboundShipmentRequest(InboundShipmentHeader inboundShipmentHeader, IList<InboundShipmentItem> inboundShipmentItems, string marketplaceId)
        {
            InboundShipmentHeader = inboundShipmentHeader;
            InboundShipmentItems = inboundShipmentItems;
            MarketplaceId = marketplaceId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "InboundShipmentHeader")]
        public InboundShipmentHeader InboundShipmentHeader { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "InboundShipmentItems")]
        public IList<InboundShipmentItem> InboundShipmentItems { get; set; }

        /// <summary>
        /// Gets or sets a marketplace identifier. Specifies the marketplace
        /// where the product would be stored.
        /// </summary>
        [JsonProperty(PropertyName = "MarketplaceId")]
        public string MarketplaceId { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (InboundShipmentHeader == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "InboundShipmentHeader");
            }
            if (InboundShipmentItems == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "InboundShipmentItems");
            }
            if (MarketplaceId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "MarketplaceId");
            }
            if (InboundShipmentHeader != null)
            {
                InboundShipmentHeader.Validate();
            }
            if (InboundShipmentItems != null)
            {
                foreach (var element in InboundShipmentItems)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}

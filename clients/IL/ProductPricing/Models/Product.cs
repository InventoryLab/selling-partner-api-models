// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.ProductPricing.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// An item.
    /// </summary>
    public partial class Product
    {
        /// <summary>
        /// Initializes a new instance of the Product class.
        /// </summary>
        public Product()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Product class.
        /// </summary>
        public Product(IdentifierType identifiers, IList<object> attributeSets = default(IList<object>), IList<object> relationships = default(IList<object>), CompetitivePricingType competitivePricing = default(CompetitivePricingType), IList<SalesRankType> salesRankings = default(IList<SalesRankType>), IList<OfferType> offers = default(IList<OfferType>))
        {
            Identifiers = identifiers;
            AttributeSets = attributeSets;
            Relationships = relationships;
            CompetitivePricing = competitivePricing;
            SalesRankings = salesRankings;
            Offers = offers;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Identifiers")]
        public IdentifierType Identifiers { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AttributeSets")]
        public IList<object> AttributeSets { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Relationships")]
        public IList<object> Relationships { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CompetitivePricing")]
        public CompetitivePricingType CompetitivePricing { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SalesRankings")]
        public IList<SalesRankType> SalesRankings { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Offers")]
        public IList<OfferType> Offers { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Identifiers == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Identifiers");
            }
            if (Identifiers != null)
            {
                Identifiers.Validate();
            }
            if (CompetitivePricing != null)
            {
                CompetitivePricing.Validate();
            }
            if (SalesRankings != null)
            {
                foreach (var element in SalesRankings)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (Offers != null)
            {
                foreach (var element1 in Offers)
                {
                    if (element1 != null)
                    {
                        element1.Validate();
                    }
                }
            }
        }
    }
}

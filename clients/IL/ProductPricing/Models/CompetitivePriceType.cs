// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.ProductPricing.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class CompetitivePriceType
    {
        /// <summary>
        /// Initializes a new instance of the CompetitivePriceType class.
        /// </summary>
        public CompetitivePriceType()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CompetitivePriceType class.
        /// </summary>
        /// <param name="competitivePriceId">The pricing model for each price
        /// that is returned.
        ///
        /// Possible values:
        ///
        /// * 1 - New Buy Box Price.
        /// * 2 - Used Buy Box Price.</param>
        /// <param name="price">Pricing information for a given
        /// CompetitivePriceId value.</param>
        /// <param name="condition">Indicates the condition of the item whose
        /// pricing information is returned. Possible values are: New, Used,
        /// Collectible, Refurbished, or Club.</param>
        /// <param name="subcondition">Indicates the subcondition of the item
        /// whose pricing information is returned. Possible values are: New,
        /// Mint, Very Good, Good, Acceptable, Poor, Club, OEM, Warranty,
        /// Refurbished Warranty, Refurbished, Open Box, or Other.</param>
        /// <param name="belongsToRequester"> Indicates whether or not the
        /// pricing information is for an offer listing that belongs to the
        /// requester. The requester is the seller associated with the SellerId
        /// that was submitted with the request. Possible values are: true and
        /// false.</param>
        public CompetitivePriceType(string competitivePriceId, PriceType price, string condition = default(string), string subcondition = default(string), bool? belongsToRequester = default(bool?))
        {
            CompetitivePriceId = competitivePriceId;
            Price = price;
            Condition = condition;
            Subcondition = subcondition;
            BelongsToRequester = belongsToRequester;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the pricing model for each price that is returned.
        ///
        /// Possible values:
        ///
        /// * 1 - New Buy Box Price.
        /// * 2 - Used Buy Box Price.
        /// </summary>
        [JsonProperty(PropertyName = "CompetitivePriceId")]
        public string CompetitivePriceId { get; set; }

        /// <summary>
        /// Gets or sets pricing information for a given CompetitivePriceId
        /// value.
        /// </summary>
        [JsonProperty(PropertyName = "Price")]
        public PriceType Price { get; set; }

        /// <summary>
        /// Gets or sets indicates the condition of the item whose pricing
        /// information is returned. Possible values are: New, Used,
        /// Collectible, Refurbished, or Club.
        /// </summary>
        [JsonProperty(PropertyName = "condition")]
        public string Condition { get; set; }

        /// <summary>
        /// Gets or sets indicates the subcondition of the item whose pricing
        /// information is returned. Possible values are: New, Mint, Very Good,
        /// Good, Acceptable, Poor, Club, OEM, Warranty, Refurbished Warranty,
        /// Refurbished, Open Box, or Other.
        /// </summary>
        [JsonProperty(PropertyName = "subcondition")]
        public string Subcondition { get; set; }

        /// <summary>
        /// Gets or sets  Indicates whether or not the pricing information is
        /// for an offer listing that belongs to the requester. The requester
        /// is the seller associated with the SellerId that was submitted with
        /// the request. Possible values are: true and false.
        /// </summary>
        [JsonProperty(PropertyName = "belongsToRequester")]
        public bool? BelongsToRequester { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (CompetitivePriceId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CompetitivePriceId");
            }
            if (Price == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Price");
            }
            if (Price != null)
            {
                Price.Validate();
            }
        }
    }
}

// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.ProductPricing.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Information about the seller's feedback, including the percentage of
    /// positive feedback, and the total number of ratings received.
    /// </summary>
    public partial class SellerFeedbackType
    {
        /// <summary>
        /// Initializes a new instance of the SellerFeedbackType class.
        /// </summary>
        public SellerFeedbackType()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SellerFeedbackType class.
        /// </summary>
        /// <param name="feedbackCount">The number of ratings received about
        /// the seller.</param>
        /// <param name="sellerPositiveFeedbackRating">The percentage of
        /// positive feedback for the seller in the past 365 days.</param>
        public SellerFeedbackType(long feedbackCount, double? sellerPositiveFeedbackRating = default(double?))
        {
            SellerPositiveFeedbackRating = sellerPositiveFeedbackRating;
            FeedbackCount = feedbackCount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the percentage of positive feedback for the seller in
        /// the past 365 days.
        /// </summary>
        [JsonProperty(PropertyName = "SellerPositiveFeedbackRating")]
        public double? SellerPositiveFeedbackRating { get; set; }

        /// <summary>
        /// Gets or sets the number of ratings received about the seller.
        /// </summary>
        [JsonProperty(PropertyName = "FeedbackCount")]
        public long FeedbackCount { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}

// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.ProductPricing.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Competitive pricing information for the item.
    /// </summary>
    public partial class CompetitivePricingType
    {
        /// <summary>
        /// Initializes a new instance of the CompetitivePricingType class.
        /// </summary>
        public CompetitivePricingType()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CompetitivePricingType class.
        /// </summary>
        /// <param name="tradeInValue">The trade-in value of the item in the
        /// trade-in program.</param>
        public CompetitivePricingType(IList<CompetitivePriceType> competitivePrices, IList<OfferListingCountType> numberOfOfferListings, MoneyType tradeInValue = default(MoneyType))
        {
            CompetitivePrices = competitivePrices;
            NumberOfOfferListings = numberOfOfferListings;
            TradeInValue = tradeInValue;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CompetitivePrices")]
        public IList<CompetitivePriceType> CompetitivePrices { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "NumberOfOfferListings")]
        public IList<OfferListingCountType> NumberOfOfferListings { get; set; }

        /// <summary>
        /// Gets or sets the trade-in value of the item in the trade-in
        /// program.
        /// </summary>
        [JsonProperty(PropertyName = "TradeInValue")]
        public MoneyType TradeInValue { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (CompetitivePrices == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CompetitivePrices");
            }
            if (NumberOfOfferListings == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "NumberOfOfferListings");
            }
            if (CompetitivePrices != null)
            {
                foreach (var element in CompetitivePrices)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (NumberOfOfferListings != null)
            {
                foreach (var element1 in NumberOfOfferListings)
                {
                    if (element1 != null)
                    {
                        element1.Validate();
                    }
                }
            }
        }
    }
}

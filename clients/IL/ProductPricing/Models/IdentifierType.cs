// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.ProductPricing.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Specifies the identifiers used to uniquely identify an item.
    /// </summary>
    public partial class IdentifierType
    {
        /// <summary>
        /// Initializes a new instance of the IdentifierType class.
        /// </summary>
        public IdentifierType()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IdentifierType class.
        /// </summary>
        /// <param name="marketplaceASIN">Indicates the item is identified by
        /// MarketPlaceId and ASIN.</param>
        /// <param name="sKUIdentifier">Indicates the item is identified by
        /// MarketPlaceId, SellerId, and SellerSKU.</param>
        public IdentifierType(ASINIdentifier marketplaceASIN, SellerSKUIdentifier sKUIdentifier = default(SellerSKUIdentifier))
        {
            MarketplaceASIN = marketplaceASIN;
            SKUIdentifier = sKUIdentifier;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets indicates the item is identified by MarketPlaceId and
        /// ASIN.
        /// </summary>
        [JsonProperty(PropertyName = "MarketplaceASIN")]
        public ASINIdentifier MarketplaceASIN { get; set; }

        /// <summary>
        /// Gets or sets indicates the item is identified by MarketPlaceId,
        /// SellerId, and SellerSKU.
        /// </summary>
        [JsonProperty(PropertyName = "SKUIdentifier")]
        public SellerSKUIdentifier SKUIdentifier { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (MarketplaceASIN == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "MarketplaceASIN");
            }
            if (MarketplaceASIN != null)
            {
                MarketplaceASIN.Validate();
            }
            if (SKUIdentifier != null)
            {
                SKUIdentifier.Validate();
            }
        }
    }
}

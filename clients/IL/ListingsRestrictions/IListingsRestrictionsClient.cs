// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.ListingsRestrictions
{
    using Microsoft.Rest;
    using Models;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// The Selling Partner API for Listings Restrictions provides programmatic
    /// access to restrictions on Amazon catalog listings.
    ///
    /// For more information, see the [Listings Restrictions API Use Case
    /// Guide](https://github.com/amzn/selling-partner-api-docs/blob/main/guides/en-US/use-case-guides/listings-restrictions-api-use-case-guide/listings-restrictions-api-use-case-guide_2021-08-01.md).
    /// </summary>
    public partial interface IListingsRestrictionsClient : System.IDisposable
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        System.Uri BaseUri { get; set; }

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        JsonSerializerSettings SerializationSettings { get; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        JsonSerializerSettings DeserializationSettings { get; }


        /// <summary>
        /// Returns listing restrictions for an item in the Amazon Catalog.
        ///
        /// **Usage Plan:**
        ///
        /// | Rate (requests per second) | Burst |
        /// | ---- | ---- |
        /// | 5 | 10 |
        ///
        /// The `x-amzn-RateLimit-Limit` response header returns the usage plan
        /// rate limits that were applied to the requested operation, when
        /// available. The table above indicates the default rate and burst
        /// values for this operation. Selling partners whose business demands
        /// require higher throughput may see higher rate and burst values then
        /// those shown here. For more information, see [Usage Plans and Rate
        /// Limits in the Selling Partner
        /// API](https://github.com/amzn/selling-partner-api-docs/blob/main/guides/en-US/usage-plans-rate-limits/Usage-Plans-and-Rate-Limits.md).
        /// </summary>
        /// <param name='asin'>
        /// The Amazon Standard Identification Number (ASIN) of the item.
        /// </param>
        /// <param name='sellerId'>
        /// A selling partner identifier, such as a merchant account.
        /// </param>
        /// <param name='marketplaceIds'>
        /// A comma-delimited list of Amazon marketplace identifiers for the
        /// request.
        /// </param>
        /// <param name='conditionType'>
        /// The condition used to filter restrictions. Possible values include:
        /// 'new_new', 'new_open_box', 'new_oem', 'refurbished_refurbished',
        /// 'used_like_new', 'used_very_good', 'used_good', 'used_acceptable',
        /// 'collectible_like_new', 'collectible_very_good',
        /// 'collectible_good', 'collectible_acceptable', 'club_club'
        /// </param>
        /// <param name='reasonLocale'>
        /// A locale for reason text localization. When not provided, the
        /// default language code of the first marketplace is used. Examples:
        /// "en_US", "fr_CA", "fr_FR". Localized messages default to "en_US"
        /// when a localization is not available in the specified locale.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,GetListingsRestrictionsHeaders>> GetListingsRestrictionsWithHttpMessagesAsync(string asin, string sellerId, IList<string> marketplaceIds, string conditionType = default(string), string reasonLocale = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

    }
}

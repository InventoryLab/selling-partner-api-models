// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.ListingsRestrictions.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// A listing restriction, optionally qualified by a condition, with a list
    /// of reasons for the restriction.
    /// </summary>
    public partial class Restriction
    {
        /// <summary>
        /// Initializes a new instance of the Restriction class.
        /// </summary>
        public Restriction()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Restriction class.
        /// </summary>
        /// <param name="marketplaceId">A marketplace identifier. Identifies
        /// the Amazon marketplace where the restriction is enforced.</param>
        /// <param name="conditionType">The condition that applies to the
        /// restriction. Possible values include: 'new_new', 'new_open_box',
        /// 'new_oem', 'refurbished_refurbished', 'used_like_new',
        /// 'used_very_good', 'used_good', 'used_acceptable',
        /// 'collectible_like_new', 'collectible_very_good',
        /// 'collectible_good', 'collectible_acceptable', 'club_club'</param>
        /// <param name="reasons">A list of reasons for the
        /// restriction.</param>
        public Restriction(string marketplaceId, string conditionType = default(string), IList<Reason> reasons = default(IList<Reason>))
        {
            MarketplaceId = marketplaceId;
            ConditionType = conditionType;
            Reasons = reasons;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets a marketplace identifier. Identifies the Amazon
        /// marketplace where the restriction is enforced.
        /// </summary>
        [JsonProperty(PropertyName = "marketplaceId")]
        public string MarketplaceId { get; set; }

        /// <summary>
        /// Gets or sets the condition that applies to the restriction.
        /// Possible values include: 'new_new', 'new_open_box', 'new_oem',
        /// 'refurbished_refurbished', 'used_like_new', 'used_very_good',
        /// 'used_good', 'used_acceptable', 'collectible_like_new',
        /// 'collectible_very_good', 'collectible_good',
        /// 'collectible_acceptable', 'club_club'
        /// </summary>
        [JsonProperty(PropertyName = "conditionType")]
        public string ConditionType { get; set; }

        /// <summary>
        /// Gets or sets a list of reasons for the restriction.
        /// </summary>
        [JsonProperty(PropertyName = "reasons")]
        public IList<Reason> Reasons { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (MarketplaceId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "MarketplaceId");
            }
            if (Reasons != null)
            {
                foreach (var element in Reasons)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}

// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.Uploads
{
    using Microsoft.Rest;
    using Models;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// The Selling Partner API for Uploads provides operations that support
    /// uploading files.
    /// </summary>
    public partial interface IUploadsClient : System.IDisposable
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        System.Uri BaseUri { get; set; }

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        JsonSerializerSettings SerializationSettings { get; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        JsonSerializerSettings DeserializationSettings { get; }


        /// <summary>
        /// Creates an upload destination for a resource that you specify and
        /// returns the information required to upload to that destination.
        ///
        /// **Usage Plan:**
        ///
        /// | Rate (requests per second) | Burst |
        /// | ---- | ---- |
        /// | .1 | 5 |
        ///
        /// For more information, see "Usage Plans and Rate Limits" in the
        /// Selling Partner API documentation.
        /// </summary>
        /// <param name='marketplaceIds'>
        /// A list of marketplace identifiers. This specifies the marketplaces
        /// where the upload will be available. Only one marketplace can be
        /// specified.
        /// </param>
        /// <param name='contentMD5'>
        /// An MD5 hash of the content to be submitted to the upload
        /// destination. This value is used to determine if the data has been
        /// corrupted or tampered with during transit.
        /// </param>
        /// <param name='resource'>
        /// The URL of the resource for the upload destination that you are
        /// creating. For example, to create an upload destination for a
        /// Buyer-Seller Messaging message, the {resource} would be /messaging
        /// and the path would be  /uploads/v1/uploadDestinations/messaging
        /// </param>
        /// <param name='contentType'>
        /// The content type of the file to be uploaded.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<CreateUploadDestinationResponse,CreateUploadDestinationForResourceHeaders>> CreateUploadDestinationForResourceWithHttpMessagesAsync(IList<string> marketplaceIds, string contentMD5, string resource, string contentType = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

    }
}

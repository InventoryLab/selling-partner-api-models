// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.Sellers.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Detailed information that is specific to a seller in a Marketplace.
    /// </summary>
    public partial class Participation
    {
        /// <summary>
        /// Initializes a new instance of the Participation class.
        /// </summary>
        public Participation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Participation class.
        /// </summary>
        /// <param name="hasSuspendedListings">Specifies if the seller has
        /// suspended listings. True if the seller Listing Status is set to
        /// Inactive, otherwise False.</param>
        public Participation(bool isParticipating, bool hasSuspendedListings)
        {
            IsParticipating = isParticipating;
            HasSuspendedListings = hasSuspendedListings;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isParticipating")]
        public bool IsParticipating { get; set; }

        /// <summary>
        /// Gets or sets specifies if the seller has suspended listings. True
        /// if the seller Listing Status is set to Inactive, otherwise False.
        /// </summary>
        [JsonProperty(PropertyName = "hasSuspendedListings")]
        public bool HasSuspendedListings { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}

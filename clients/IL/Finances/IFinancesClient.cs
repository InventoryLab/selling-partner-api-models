// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.Finances
{
    using Microsoft.Rest;
    using Models;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// The Selling Partner API for Finances helps you obtain financial
    /// information relevant to a seller's business. You can obtain financial
    /// events for a given order, financial event group, or date range without
    /// having to wait until a statement period closes. You can also obtain
    /// financial event groups for a given date range.
    /// </summary>
    public partial interface IFinancesClient : System.IDisposable
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        System.Uri BaseUri { get; set; }

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        JsonSerializerSettings SerializationSettings { get; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        JsonSerializerSettings DeserializationSettings { get; }


        /// <summary>
        /// Returns financial event groups for a given date range.
        ///
        /// **Usage Plan:**
        ///
        /// | Rate (requests per second) | Burst |
        /// | ---- | ---- |
        /// | 0.5 | 30 |
        ///
        /// For more information, see "Usage Plans and Rate Limits" in the
        /// Selling Partner API documentation.
        /// </summary>
        /// <param name='maxResultsPerPage'>
        /// The maximum number of results to return per page.
        /// </param>
        /// <param name='financialEventGroupStartedBefore'>
        /// A date used for selecting financial event groups that opened before
        /// (but not at) a specified date and time, in ISO 8601 format. The
        /// date-time  must be later than FinancialEventGroupStartedAfter and
        /// no later than two minutes before the request was submitted. If
        /// FinancialEventGroupStartedAfter and
        /// FinancialEventGroupStartedBefore are more than 180 days apart, no
        /// financial event groups are returned.
        /// </param>
        /// <param name='financialEventGroupStartedAfter'>
        /// A date used for selecting financial event groups that opened after
        /// (or at) a specified date and time, in ISO 8601 format. The
        /// date-time must be no later than two minutes before the request was
        /// submitted.
        /// </param>
        /// <param name='nextToken'>
        /// A string token returned in the response of your previous request.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ListFinancialEventGroupsResponse,ListFinancialEventGroupsHeaders>> ListFinancialEventGroupsWithHttpMessagesAsync(int? maxResultsPerPage = 100, System.DateTime? financialEventGroupStartedBefore = default(System.DateTime?), System.DateTime? financialEventGroupStartedAfter = default(System.DateTime?), string nextToken = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Returns all financial events for the specified financial event
        /// group.
        ///
        /// **Usage Plan:**
        ///
        /// | Rate (requests per second) | Burst |
        /// | ---- | ---- |
        /// | 0.5 | 30 |
        ///
        /// For more information, see "Usage Plans and Rate Limits" in the
        /// Selling Partner API documentation.
        /// </summary>
        /// <param name='eventGroupId'>
        /// The identifier of the financial event group to which the events
        /// belong.
        /// </param>
        /// <param name='maxResultsPerPage'>
        /// The maximum number of results to return per page.
        /// </param>
        /// <param name='nextToken'>
        /// A string token returned in the response of your previous request.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ListFinancialEventsResponse,ListFinancialEventsByGroupIdHeaders>> ListFinancialEventsByGroupIdWithHttpMessagesAsync(string eventGroupId, int? maxResultsPerPage = 100, string nextToken = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Returns all financial events for the specified order.
        ///
        /// **Usage Plan:**
        ///
        /// | Rate (requests per second) | Burst |
        /// | ---- | ---- |
        /// | 0.5 | 30 |
        ///
        /// For more information, see "Usage Plans and Rate Limits" in the
        /// Selling Partner API documentation.
        /// </summary>
        /// <param name='orderId'>
        /// An Amazon-defined order identifier, in 3-7-7 format.
        /// </param>
        /// <param name='maxResultsPerPage'>
        /// The maximum number of results to return per page.
        /// </param>
        /// <param name='nextToken'>
        /// A string token returned in the response of your previous request.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ListFinancialEventsResponse,ListFinancialEventsByOrderIdHeaders>> ListFinancialEventsByOrderIdWithHttpMessagesAsync(string orderId, int? maxResultsPerPage = 100, string nextToken = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Returns financial events for the specified data range.
        ///
        /// **Usage Plan:**
        ///
        /// | Rate (requests per second) | Burst |
        /// | ---- | ---- |
        /// | 0.5 | 30 |
        ///
        /// For more information, see "Usage Plans and Rate Limits" in the
        /// Selling Partner API documentation.
        /// </summary>
        /// <param name='maxResultsPerPage'>
        /// The maximum number of results to return per page.
        /// </param>
        /// <param name='postedAfter'>
        /// A date used for selecting financial events posted after (or at) a
        /// specified time. The date-time must be no later than two minutes
        /// before the request was submitted, in ISO 8601 date time format.
        /// </param>
        /// <param name='postedBefore'>
        /// A date used for selecting financial events posted before (but not
        /// at) a specified time. The date-time must be later than PostedAfter
        /// and no later than two minutes before the request was submitted, in
        /// ISO 8601 date time format. If PostedAfter and PostedBefore are more
        /// than 180 days apart, no financial events are returned. You must
        /// specify the PostedAfter parameter if you specify the PostedBefore
        /// parameter. Default: Now minus two minutes.
        /// </param>
        /// <param name='nextToken'>
        /// A string token returned in the response of your previous request.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ListFinancialEventsResponse,ListFinancialEventsHeaders>> ListFinancialEventsWithHttpMessagesAsync(int? maxResultsPerPage = 100, System.DateTime? postedAfter = default(System.DateTime?), System.DateTime? postedBefore = default(System.DateTime?), string nextToken = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

    }
}

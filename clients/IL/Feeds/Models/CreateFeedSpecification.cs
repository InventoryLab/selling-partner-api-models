// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.Feeds.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class CreateFeedSpecification
    {
        /// <summary>
        /// Initializes a new instance of the CreateFeedSpecification class.
        /// </summary>
        public CreateFeedSpecification()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CreateFeedSpecification class.
        /// </summary>
        /// <param name="feedType">The feed type.</param>
        /// <param name="marketplaceIds">A list of identifiers for marketplaces
        /// that you want the feed to be applied to.</param>
        /// <param name="inputFeedDocumentId">The document identifier returned
        /// by the createFeedDocument operation. Upload the feed document
        /// contents before calling the createFeed operation.</param>
        public CreateFeedSpecification(string feedType, IList<string> marketplaceIds, string inputFeedDocumentId, IDictionary<string, string> feedOptions = default(IDictionary<string, string>))
        {
            FeedType = feedType;
            MarketplaceIds = marketplaceIds;
            InputFeedDocumentId = inputFeedDocumentId;
            FeedOptions = feedOptions;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the feed type.
        /// </summary>
        [JsonProperty(PropertyName = "feedType")]
        public string FeedType { get; set; }

        /// <summary>
        /// Gets or sets a list of identifiers for marketplaces that you want
        /// the feed to be applied to.
        /// </summary>
        [JsonProperty(PropertyName = "marketplaceIds")]
        public IList<string> MarketplaceIds { get; set; }

        /// <summary>
        /// Gets or sets the document identifier returned by the
        /// createFeedDocument operation. Upload the feed document contents
        /// before calling the createFeed operation.
        /// </summary>
        [JsonProperty(PropertyName = "inputFeedDocumentId")]
        public string InputFeedDocumentId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "feedOptions")]
        public IDictionary<string, string> FeedOptions { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (FeedType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FeedType");
            }
            if (MarketplaceIds == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "MarketplaceIds");
            }
            if (InputFeedDocumentId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "InputFeedDocumentId");
            }
            if (MarketplaceIds != null)
            {
                if (MarketplaceIds.Count > 25)
                {
                    throw new ValidationException(ValidationRules.MaxItems, "MarketplaceIds", 25);
                }
                if (MarketplaceIds.Count < 1)
                {
                    throw new ValidationException(ValidationRules.MinItems, "MarketplaceIds", 1);
                }
            }
        }
    }
}

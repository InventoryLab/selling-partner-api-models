// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.Feeds.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Information required to upload a feed document's contents.
    /// </summary>
    public partial class CreateFeedDocumentResponse
    {
        /// <summary>
        /// Initializes a new instance of the CreateFeedDocumentResponse class.
        /// </summary>
        public CreateFeedDocumentResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CreateFeedDocumentResponse class.
        /// </summary>
        /// <param name="feedDocumentId">The identifier of the feed
        /// document.</param>
        /// <param name="url">The presigned URL for uploading the feed
        /// contents. This URL expires after 5 minutes.</param>
        public CreateFeedDocumentResponse(string feedDocumentId, string url)
        {
            FeedDocumentId = feedDocumentId;
            Url = url;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the identifier of the feed document.
        /// </summary>
        [JsonProperty(PropertyName = "feedDocumentId")]
        public string FeedDocumentId { get; set; }

        /// <summary>
        /// Gets or sets the presigned URL for uploading the feed contents.
        /// This URL expires after 5 minutes.
        /// </summary>
        [JsonProperty(PropertyName = "url")]
        public string Url { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (FeedDocumentId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FeedDocumentId");
            }
            if (Url == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Url");
            }
        }
    }
}

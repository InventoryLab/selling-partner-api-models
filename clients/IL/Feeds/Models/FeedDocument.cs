// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.Feeds.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class FeedDocument
    {
        /// <summary>
        /// Initializes a new instance of the FeedDocument class.
        /// </summary>
        public FeedDocument()
        {
            EncryptionDetails = new FeedDocumentEncryptionDetails();
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FeedDocument class.
        /// </summary>
        /// <param name="feedDocumentId">The identifier for the feed document.
        /// This identifier is unique only in combination with a seller
        /// ID.</param>
        /// <param name="url">A presigned URL for the feed document. This URL
        /// expires after 5 minutes.</param>
        /// <param name="compressionAlgorithm">If present, the feed document
        /// contents are compressed using the indicated algorithm. Possible
        /// values include: 'GZIP'</param>
        public FeedDocument(string feedDocumentId, string url, FeedDocumentEncryptionDetails encryptionDetails, string compressionAlgorithm = default(string))
        {
            FeedDocumentId = feedDocumentId;
            Url = url;
            EncryptionDetails = encryptionDetails;
            CompressionAlgorithm = compressionAlgorithm;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the identifier for the feed document. This identifier
        /// is unique only in combination with a seller ID.
        /// </summary>
        [JsonProperty(PropertyName = "feedDocumentId")]
        public string FeedDocumentId { get; set; }

        /// <summary>
        /// Gets or sets a presigned URL for the feed document. This URL
        /// expires after 5 minutes.
        /// </summary>
        [JsonProperty(PropertyName = "url")]
        public string Url { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "encryptionDetails")]
        public FeedDocumentEncryptionDetails EncryptionDetails { get; set; }

        /// <summary>
        /// Gets or sets if present, the feed document contents are compressed
        /// using the indicated algorithm. Possible values include: 'GZIP'
        /// </summary>
        [JsonProperty(PropertyName = "compressionAlgorithm")]
        public string CompressionAlgorithm { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (FeedDocumentId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FeedDocumentId");
            }
            if (Url == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Url");
            }
            if (EncryptionDetails == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "EncryptionDetails");
            }
            if (EncryptionDetails != null)
            {
                EncryptionDetails.Validate();
            }
        }
    }
}

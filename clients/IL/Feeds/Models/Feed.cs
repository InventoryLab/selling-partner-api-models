// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.Feeds.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Detailed information about the feed.
    /// </summary>
    public partial class Feed
    {
        /// <summary>
        /// Initializes a new instance of the Feed class.
        /// </summary>
        public Feed()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Feed class.
        /// </summary>
        /// <param name="feedId">The identifier for the feed. This identifier
        /// is unique only in combination with a seller ID.</param>
        /// <param name="feedType">The feed type.</param>
        /// <param name="createdTime">The date and time when the feed was
        /// created, in ISO 8601 date time format.</param>
        /// <param name="processingStatus">The processing status of the feed.
        /// Possible values include: 'CANCELLED', 'DONE', 'FATAL',
        /// 'IN_PROGRESS', 'IN_QUEUE'</param>
        /// <param name="marketplaceIds">A list of identifiers for the
        /// marketplaces that the feed is applied to.</param>
        /// <param name="processingStartTime">The date and time when feed
        /// processing started, in ISO 8601 date time format.</param>
        /// <param name="processingEndTime">The date and time when feed
        /// processing completed, in ISO 8601 date time format.</param>
        /// <param name="resultFeedDocumentId">The identifier for the feed
        /// document. This identifier is unique only in combination with a
        /// seller ID.</param>
        public Feed(string feedId, string feedType, System.DateTime createdTime, string processingStatus, IList<string> marketplaceIds = default(IList<string>), System.DateTime? processingStartTime = default(System.DateTime?), System.DateTime? processingEndTime = default(System.DateTime?), string resultFeedDocumentId = default(string))
        {
            FeedId = feedId;
            FeedType = feedType;
            MarketplaceIds = marketplaceIds;
            CreatedTime = createdTime;
            ProcessingStatus = processingStatus;
            ProcessingStartTime = processingStartTime;
            ProcessingEndTime = processingEndTime;
            ResultFeedDocumentId = resultFeedDocumentId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the identifier for the feed. This identifier is unique
        /// only in combination with a seller ID.
        /// </summary>
        [JsonProperty(PropertyName = "feedId")]
        public string FeedId { get; set; }

        /// <summary>
        /// Gets or sets the feed type.
        /// </summary>
        [JsonProperty(PropertyName = "feedType")]
        public string FeedType { get; set; }

        /// <summary>
        /// Gets or sets a list of identifiers for the marketplaces that the
        /// feed is applied to.
        /// </summary>
        [JsonProperty(PropertyName = "marketplaceIds")]
        public IList<string> MarketplaceIds { get; set; }

        /// <summary>
        /// Gets or sets the date and time when the feed was created, in ISO
        /// 8601 date time format.
        /// </summary>
        [JsonProperty(PropertyName = "createdTime")]
        public System.DateTime CreatedTime { get; set; }

        /// <summary>
        /// Gets or sets the processing status of the feed. Possible values
        /// include: 'CANCELLED', 'DONE', 'FATAL', 'IN_PROGRESS', 'IN_QUEUE'
        /// </summary>
        [JsonProperty(PropertyName = "processingStatus")]
        public string ProcessingStatus { get; set; }

        /// <summary>
        /// Gets or sets the date and time when feed processing started, in ISO
        /// 8601 date time format.
        /// </summary>
        [JsonProperty(PropertyName = "processingStartTime")]
        public System.DateTime? ProcessingStartTime { get; set; }

        /// <summary>
        /// Gets or sets the date and time when feed processing completed, in
        /// ISO 8601 date time format.
        /// </summary>
        [JsonProperty(PropertyName = "processingEndTime")]
        public System.DateTime? ProcessingEndTime { get; set; }

        /// <summary>
        /// Gets or sets the identifier for the feed document. This identifier
        /// is unique only in combination with a seller ID.
        /// </summary>
        [JsonProperty(PropertyName = "resultFeedDocumentId")]
        public string ResultFeedDocumentId { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (FeedId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FeedId");
            }
            if (FeedType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FeedType");
            }
            if (ProcessingStatus == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ProcessingStatus");
            }
        }
    }
}

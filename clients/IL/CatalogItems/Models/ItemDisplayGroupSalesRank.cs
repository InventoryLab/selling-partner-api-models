// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.CatalogItems.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Sales rank of an Amazon catalog item by website display group.
    /// </summary>
    public partial class ItemDisplayGroupSalesRank
    {
        /// <summary>
        /// Initializes a new instance of the ItemDisplayGroupSalesRank class.
        /// </summary>
        public ItemDisplayGroupSalesRank()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ItemDisplayGroupSalesRank class.
        /// </summary>
        /// <param name="websiteDisplayGroup">Name of the website display group
        /// associated with the sales rank</param>
        /// <param name="title">Title, or name, of the sales rank.</param>
        /// <param name="rank">Sales rank value.</param>
        /// <param name="link">Corresponding Amazon retail website link, or
        /// URL, for the sales rank.</param>
        public ItemDisplayGroupSalesRank(string websiteDisplayGroup, string title, int rank, string link = default(string))
        {
            WebsiteDisplayGroup = websiteDisplayGroup;
            Title = title;
            Link = link;
            Rank = rank;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of the website display group associated with the
        /// sales rank
        /// </summary>
        [JsonProperty(PropertyName = "websiteDisplayGroup")]
        public string WebsiteDisplayGroup { get; set; }

        /// <summary>
        /// Gets or sets title, or name, of the sales rank.
        /// </summary>
        [JsonProperty(PropertyName = "title")]
        public string Title { get; set; }

        /// <summary>
        /// Gets or sets corresponding Amazon retail website link, or URL, for
        /// the sales rank.
        /// </summary>
        [JsonProperty(PropertyName = "link")]
        public string Link { get; set; }

        /// <summary>
        /// Gets or sets sales rank value.
        /// </summary>
        [JsonProperty(PropertyName = "rank")]
        public int Rank { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (WebsiteDisplayGroup == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "WebsiteDisplayGroup");
            }
            if (Title == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Title");
            }
        }
    }
}

// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.CatalogItems.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Summary details of an Amazon catalog item for the indicated Amazon
    /// marketplace.
    /// </summary>
    public partial class ItemSummaryByMarketplace
    {
        /// <summary>
        /// Initializes a new instance of the ItemSummaryByMarketplace class.
        /// </summary>
        public ItemSummaryByMarketplace()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ItemSummaryByMarketplace class.
        /// </summary>
        /// <param name="marketplaceId">Amazon marketplace identifier.</param>
        /// <param name="brandName">Name of the brand associated with an Amazon
        /// catalog item.</param>
        /// <param name="browseNode">Identifier of the browse node associated
        /// with an Amazon catalog item.</param>
        /// <param name="colorName">Name of the color associated with an Amazon
        /// catalog item.</param>
        /// <param name="itemName">Name, or title, associated with an Amazon
        /// catalog item.</param>
        /// <param name="manufacturer">Name of the manufacturer associated with
        /// an Amazon catalog item.</param>
        /// <param name="modelNumber">Model number associated with an Amazon
        /// catalog item.</param>
        /// <param name="sizeName">Name of the size associated with an Amazon
        /// catalog item.</param>
        /// <param name="styleName">Name of the style associated with an Amazon
        /// catalog item.</param>
        public ItemSummaryByMarketplace(string marketplaceId, string brandName = default(string), string browseNode = default(string), string colorName = default(string), string itemName = default(string), string manufacturer = default(string), string modelNumber = default(string), string sizeName = default(string), string styleName = default(string))
        {
            MarketplaceId = marketplaceId;
            BrandName = brandName;
            BrowseNode = browseNode;
            ColorName = colorName;
            ItemName = itemName;
            Manufacturer = manufacturer;
            ModelNumber = modelNumber;
            SizeName = sizeName;
            StyleName = styleName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets amazon marketplace identifier.
        /// </summary>
        [JsonProperty(PropertyName = "marketplaceId")]
        public string MarketplaceId { get; set; }

        /// <summary>
        /// Gets or sets name of the brand associated with an Amazon catalog
        /// item.
        /// </summary>
        [JsonProperty(PropertyName = "brandName")]
        public string BrandName { get; set; }

        /// <summary>
        /// Gets or sets identifier of the browse node associated with an
        /// Amazon catalog item.
        /// </summary>
        [JsonProperty(PropertyName = "browseNode")]
        public string BrowseNode { get; set; }

        /// <summary>
        /// Gets or sets name of the color associated with an Amazon catalog
        /// item.
        /// </summary>
        [JsonProperty(PropertyName = "colorName")]
        public string ColorName { get; set; }

        /// <summary>
        /// Gets or sets name, or title, associated with an Amazon catalog
        /// item.
        /// </summary>
        [JsonProperty(PropertyName = "itemName")]
        public string ItemName { get; set; }

        /// <summary>
        /// Gets or sets name of the manufacturer associated with an Amazon
        /// catalog item.
        /// </summary>
        [JsonProperty(PropertyName = "manufacturer")]
        public string Manufacturer { get; set; }

        /// <summary>
        /// Gets or sets model number associated with an Amazon catalog item.
        /// </summary>
        [JsonProperty(PropertyName = "modelNumber")]
        public string ModelNumber { get; set; }

        /// <summary>
        /// Gets or sets name of the size associated with an Amazon catalog
        /// item.
        /// </summary>
        [JsonProperty(PropertyName = "sizeName")]
        public string SizeName { get; set; }

        /// <summary>
        /// Gets or sets name of the style associated with an Amazon catalog
        /// item.
        /// </summary>
        [JsonProperty(PropertyName = "styleName")]
        public string StyleName { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (MarketplaceId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "MarketplaceId");
            }
        }
    }
}

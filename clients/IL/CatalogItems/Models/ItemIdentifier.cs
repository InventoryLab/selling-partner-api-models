// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.CatalogItems.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Identifier associated with the item in the Amazon catalog, such as a
    /// UPC or EAN identifier.
    /// </summary>
    public partial class ItemIdentifier
    {
        /// <summary>
        /// Initializes a new instance of the ItemIdentifier class.
        /// </summary>
        public ItemIdentifier()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ItemIdentifier class.
        /// </summary>
        /// <param name="identifierType">Type of identifier, such as UPC, EAN,
        /// or ISBN.</param>
        /// <param name="identifier">Identifier.</param>
        public ItemIdentifier(string identifierType, string identifier)
        {
            IdentifierType = identifierType;
            Identifier = identifier;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets type of identifier, such as UPC, EAN, or ISBN.
        /// </summary>
        [JsonProperty(PropertyName = "identifierType")]
        public string IdentifierType { get; set; }

        /// <summary>
        /// Gets or sets identifier.
        /// </summary>
        [JsonProperty(PropertyName = "identifier")]
        public string Identifier { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (IdentifierType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "IdentifierType");
            }
            if (Identifier == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Identifier");
            }
        }
    }
}

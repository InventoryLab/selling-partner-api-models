// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.Orders
{
    using Microsoft.Rest;
    using Models;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// The Selling Partner API for Orders helps you programmatically retrieve
    /// order information. These APIs let you develop fast, flexible, custom
    /// applications in areas like order synchronization, order research, and
    /// demand-based decision support tools.
    /// </summary>
    public partial interface IOrdersClient : System.IDisposable
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        System.Uri BaseUri { get; set; }

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        JsonSerializerSettings SerializationSettings { get; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        JsonSerializerSettings DeserializationSettings { get; }


        /// <summary>
        /// Returns orders created or updated during the time frame indicated
        /// by the specified parameters. You can also apply a range of
        /// filtering criteria to narrow the list of orders returned. If
        /// NextToken is present, that will be used to retrieve the orders
        /// instead of other criteria.
        ///
        /// **Usage Plans:**
        ///
        /// | Plan type | Rate (requests per second) | Burst |
        /// | ---- | ---- | ---- |
        /// |Default| 0.0055 | 20 |
        /// |Selling partner specific| Variable | Variable |
        ///
        /// The x-amzn-RateLimit-Limit response header returns the usage plan
        /// rate limits that were applied to the requested operation. Rate
        /// limits for some selling partners will vary from the default rate
        /// and burst shown in the table above. For more information, see
        /// "Usage Plans and Rate Limits" in the Selling Partner API
        /// documentation.
        /// </summary>
        /// <param name='marketplaceIds'>
        /// A list of MarketplaceId values. Used to select orders that were
        /// placed in the specified marketplaces.
        ///
        /// See the [Selling Partner API Developer
        /// Guide](https://github.com/amzn/selling-partner-api-docs/blob/main/guides/en-US/developer-guide/SellingPartnerApiDeveloperGuide.md#marketplaceid-values)
        /// for a complete list of marketplaceId values.
        /// </param>
        /// <param name='createdAfter'>
        /// A date used for selecting orders created after (or at) a specified
        /// time. Only orders placed after the specified time are returned.
        /// Either the CreatedAfter parameter or the LastUpdatedAfter parameter
        /// is required. Both cannot be empty. The date must be in ISO 8601
        /// format.
        /// </param>
        /// <param name='createdBefore'>
        /// A date used for selecting orders created before (or at) a specified
        /// time. Only orders placed before the specified time are returned.
        /// The date must be in ISO 8601 format.
        /// </param>
        /// <param name='lastUpdatedAfter'>
        /// A date used for selecting orders that were last updated after (or
        /// at) a specified time. An update is defined as any change in order
        /// status, including the creation of a new order. Includes updates
        /// made by Amazon and by the seller. The date must be in ISO 8601
        /// format.
        /// </param>
        /// <param name='lastUpdatedBefore'>
        /// A date used for selecting orders that were last updated before (or
        /// at) a specified time. An update is defined as any change in order
        /// status, including the creation of a new order. Includes updates
        /// made by Amazon and by the seller. The date must be in ISO 8601
        /// format.
        /// </param>
        /// <param name='orderStatuses'>
        /// A list of OrderStatus values used to filter the results. Possible
        /// values: PendingAvailability (This status is available for
        /// pre-orders only. The order has been placed, payment has not been
        /// authorized, and the release date of the item is in the future.);
        /// Pending (The order has been placed but payment has not been
        /// authorized); Unshipped (Payment has been authorized and the order
        /// is ready for shipment, but no items in the order have been
        /// shipped); PartiallyShipped (One or more, but not all, items in the
        /// order have been shipped); Shipped (All items in the order have been
        /// shipped); InvoiceUnconfirmed (All items in the order have been
        /// shipped. The seller has not yet given confirmation to Amazon that
        /// the invoice has been shipped to the buyer.); Canceled (The order
        /// has been canceled); and Unfulfillable (The order cannot be
        /// fulfilled. This state applies only to Multi-Channel Fulfillment
        /// orders.).
        /// </param>
        /// <param name='fulfillmentChannels'>
        /// A list that indicates how an order was fulfilled. Filters the
        /// results by fulfillment channel. Possible values: FBA (Fulfillment
        /// by Amazon); SellerFulfilled (Fulfilled by the seller).
        /// </param>
        /// <param name='paymentMethods'>
        /// A list of payment method values. Used to select orders paid using
        /// the specified payment methods. Possible values: COD (Cash on
        /// delivery); CVS (Convenience store payment); Other (Any payment
        /// method other than COD or CVS).
        /// </param>
        /// <param name='buyerEmail'>
        /// The email address of a buyer. Used to select orders that contain
        /// the specified email address.
        /// </param>
        /// <param name='sellerOrderId'>
        /// An order identifier that is specified by the seller. Used to select
        /// only the orders that match the order identifier. If SellerOrderId
        /// is specified, then FulfillmentChannels, OrderStatuses,
        /// PaymentMethod, LastUpdatedAfter, LastUpdatedBefore, and BuyerEmail
        /// cannot be specified.
        /// </param>
        /// <param name='maxResultsPerPage'>
        /// A number that indicates the maximum number of orders that can be
        /// returned per page. Value must be 1 - 100. Default 100.
        /// </param>
        /// <param name='easyShipShipmentStatuses'>
        /// A list of EasyShipShipmentStatus values. Used to select Easy Ship
        /// orders with statuses that match the specified  values. If
        /// EasyShipShipmentStatus is specified, only Amazon Easy Ship orders
        /// are returned.Possible values: PendingPickUp (Amazon has not yet
        /// picked up the package from the seller). LabelCanceled (The seller
        /// canceled the pickup). PickedUp (Amazon has picked up the package
        /// from the seller). AtOriginFC (The packaged is at the origin
        /// fulfillment center). AtDestinationFC (The package is at the
        /// destination fulfillment center). OutForDelivery (The package is out
        /// for delivery). Damaged (The package was damaged by the carrier).
        /// Delivered (The package has been delivered to the buyer).
        /// RejectedByBuyer (The package has been rejected by the buyer).
        /// Undeliverable (The package cannot be delivered). ReturnedToSeller
        /// (The package was not delivered to the buyer and was returned to the
        /// seller). ReturningToSeller (The package was not delivered to the
        /// buyer and is being returned to the seller).
        /// </param>
        /// <param name='nextToken'>
        /// A string token returned in the response of your previous request.
        /// </param>
        /// <param name='amazonOrderIds'>
        /// A list of AmazonOrderId values. An AmazonOrderId is an
        /// Amazon-defined order identifier, in 3-7-7 format.
        /// </param>
        /// <param name='actualFulfillmentSupplySourceId'>
        /// Denotes the recommended sourceId where the order should be
        /// fulfilled from.
        /// </param>
        /// <param name='isISPU'>
        /// When true, this order is marked to be picked up from a store rather
        /// than delivered.
        /// </param>
        /// <param name='storeChainStoreId'>
        /// The store chain store identifier. Linked to a specific store in a
        /// store chain.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<GetOrdersResponse,GetOrdersHeaders>> GetOrdersWithHttpMessagesAsync(IList<string> marketplaceIds, string createdAfter = default(string), string createdBefore = default(string), string lastUpdatedAfter = default(string), string lastUpdatedBefore = default(string), IList<string> orderStatuses = default(IList<string>), IList<string> fulfillmentChannels = default(IList<string>), IList<string> paymentMethods = default(IList<string>), string buyerEmail = default(string), string sellerOrderId = default(string), int? maxResultsPerPage = default(int?), IList<string> easyShipShipmentStatuses = default(IList<string>), string nextToken = default(string), IList<string> amazonOrderIds = default(IList<string>), string actualFulfillmentSupplySourceId = default(string), bool? isISPU = default(bool?), string storeChainStoreId = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Returns the order indicated by the specified order ID.
        ///
        /// **Usage Plans:**
        ///
        /// | Plan type | Rate (requests per second) | Burst |
        /// | ---- | ---- | ---- |
        /// |Default| 0.0055 | 20 |
        /// |Selling partner specific| Variable | Variable |
        ///
        /// The x-amzn-RateLimit-Limit response header returns the usage plan
        /// rate limits that were applied to the requested operation. Rate
        /// limits for some selling partners will vary from the default rate
        /// and burst shown in the table above. For more information, see
        /// "Usage Plans and Rate Limits" in the Selling Partner API
        /// documentation.
        /// </summary>
        /// <param name='orderId'>
        /// An Amazon-defined order identifier, in 3-7-7 format.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<GetOrderResponse,GetOrderHeaders>> GetOrderWithHttpMessagesAsync(string orderId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Returns buyer information for the specified order.
        ///
        /// **Important.** We recommend using the getOrders operation to get
        /// buyer information for an order, as the getOrderBuyerInfo operation
        /// is scheduled for deprecation on January 12, 2022. For more
        /// information, see the [Tokens API Use Case
        /// Guide](https://github.com/amzn/selling-partner-api-docs/blob/main/guides/en-US/use-case-guides/tokens-api-use-case-guide/tokens-API-use-case-guide-2021-03-01.md).
        ///
        /// **Usage Plans:**
        ///
        /// | Plan type | Rate (requests per second) | Burst |
        /// | ---- | ---- | ---- |
        /// |Default| 0.0055 | 20 |
        /// |Selling partner specific| Variable | Variable |
        ///
        /// The x-amzn-RateLimit-Limit response header returns the usage plan
        /// rate limits that were applied to the requested operation. Rate
        /// limits for some selling partners will vary from the default rate
        /// and burst shown in the table above. For more information, see
        /// "Usage Plans and Rate Limits" in the Selling Partner API
        /// documentation.
        /// </summary>
        /// <param name='orderId'>
        /// An orderId is an Amazon-defined order identifier, in 3-7-7 format.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<GetOrderBuyerInfoResponse,GetOrderBuyerInfoHeaders>> GetOrderBuyerInfoWithHttpMessagesAsync(string orderId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Returns the shipping address for the specified order.
        ///
        /// **Important.** We recommend using the getOrders operation to get
        /// shipping address information for an order, as the getOrderAddress
        /// operation is scheduled for deprecation on January 12, 2022. For
        /// more information, see the [Tokens API Use Case
        /// Guide](https://github.com/amzn/selling-partner-api-docs/blob/main/guides/en-US/use-case-guides/tokens-api-use-case-guide/tokens-API-use-case-guide-2021-03-01.md).
        ///
        /// **Usage Plans:**
        ///
        /// | Plan type | Rate (requests per second) | Burst |
        /// | ---- | ---- | ---- |
        /// |Default| 0.0055 | 20 |
        /// |Selling partner specific| Variable | Variable |
        ///
        /// The x-amzn-RateLimit-Limit response header returns the usage plan
        /// rate limits that were applied to the requested operation. Rate
        /// limits for some selling partners will vary from the default rate
        /// and burst shown in the table above. For more information, see
        /// "Usage Plans and Rate Limits" in the Selling Partner API
        /// documentation.
        /// </summary>
        /// <param name='orderId'>
        /// An orderId is an Amazon-defined order identifier, in 3-7-7 format.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<GetOrderAddressResponse,GetOrderAddressHeaders>> GetOrderAddressWithHttpMessagesAsync(string orderId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Returns detailed order item information for the order indicated by
        /// the specified order ID. If NextToken is provided, it's used to
        /// retrieve the next page of order items.
        ///
        /// Note: When an order is in the Pending state (the order has been
        /// placed but payment has not been authorized), the getOrderItems
        /// operation does not return information about pricing, taxes,
        /// shipping charges, gift status or promotions for the order items in
        /// the order. After an order leaves the Pending state (this occurs
        /// when payment has been authorized) and enters the Unshipped,
        /// Partially Shipped, or Shipped state, the getOrderItems operation
        /// returns information about pricing, taxes, shipping charges, gift
        /// status and promotions for the order items in the order.
        ///
        /// **Usage Plans:**
        ///
        /// | Plan type | Rate (requests per second) | Burst |
        /// | ---- | ---- | ---- |
        /// |Default| 0.0055 | 20 |
        /// |Selling partner specific| Variable | Variable |
        ///
        /// The x-amzn-RateLimit-Limit response header returns the usage plan
        /// rate limits that were applied to the requested operation. Rate
        /// limits for some selling partners will vary from the default rate
        /// and burst shown in the table above. For more information, see
        /// "Usage Plans and Rate Limits" in the Selling Partner API
        /// documentation.
        /// </summary>
        /// <param name='orderId'>
        /// An Amazon-defined order identifier, in 3-7-7 format.
        /// </param>
        /// <param name='nextToken'>
        /// A string token returned in the response of your previous request.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<GetOrderItemsResponse,GetOrderItemsHeaders>> GetOrderItemsWithHttpMessagesAsync(string orderId, string nextToken = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Returns buyer information for the order items in the specified
        /// order.
        ///
        /// **Important.** We recommend using the getOrderItems operation to
        /// get buyer information for the order items in an order, as the
        /// getOrderItemsBuyerInfo operation is scheduled for deprecation on
        /// January 12, 2022. For more information, see the [Tokens API Use
        /// Case
        /// Guide](https://github.com/amzn/selling-partner-api-docs/blob/main/guides/en-US/use-case-guides/tokens-api-use-case-guide/tokens-API-use-case-guide-2021-03-01.md).
        ///
        /// **Usage Plans:**
        ///
        /// | Plan type | Rate (requests per second) | Burst |
        /// | ---- | ---- | ---- |
        /// |Default| 0.0055 | 20 |
        /// |Selling partner specific| Variable | Variable |
        ///
        /// The x-amzn-RateLimit-Limit response header returns the usage plan
        /// rate limits that were applied to the requested operation. Rate
        /// limits for some selling partners will vary from the default rate
        /// and burst shown in the table above. For more information, see
        /// "Usage Plans and Rate Limits" in the Selling Partner API
        /// documentation.
        /// </summary>
        /// <param name='orderId'>
        /// An Amazon-defined order identifier, in 3-7-7 format.
        /// </param>
        /// <param name='nextToken'>
        /// A string token returned in the response of your previous request.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<GetOrderItemsBuyerInfoResponse,GetOrderItemsBuyerInfoHeaders>> GetOrderItemsBuyerInfoWithHttpMessagesAsync(string orderId, string nextToken = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Update the shipment status.
        /// </summary>
        /// <param name='orderId'>
        /// An Amazon-defined order identifier, in 3-7-7 format.
        /// </param>
        /// <param name='payload'>
        /// Request to update the shipment status.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<UpdateShipmentStatusErrorResponse,UpdateShipmentStatusHeaders>> UpdateShipmentStatusWithHttpMessagesAsync(string orderId, UpdateShipmentStatusRequest payload, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

    }
}

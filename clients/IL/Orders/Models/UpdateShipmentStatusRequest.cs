// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.Orders.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Request to update the status of shipment of an order.
    /// </summary>
    public partial class UpdateShipmentStatusRequest
    {
        /// <summary>
        /// Initializes a new instance of the UpdateShipmentStatusRequest
        /// class.
        /// </summary>
        public UpdateShipmentStatusRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UpdateShipmentStatusRequest
        /// class.
        /// </summary>
        /// <param name="shipmentStatus">Possible values include:
        /// 'ReadyForPickup', 'PickedUp', 'RefusedPickup'</param>
        public UpdateShipmentStatusRequest(string marketplaceId, string shipmentStatus, IList<OrderItemsItem> orderItems = default(IList<OrderItemsItem>))
        {
            MarketplaceId = marketplaceId;
            ShipmentStatus = shipmentStatus;
            OrderItems = orderItems;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "marketplaceId")]
        public string MarketplaceId { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'ReadyForPickup', 'PickedUp',
        /// 'RefusedPickup'
        /// </summary>
        [JsonProperty(PropertyName = "shipmentStatus")]
        public string ShipmentStatus { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "orderItems")]
        public IList<OrderItemsItem> OrderItems { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (MarketplaceId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "MarketplaceId");
            }
            if (ShipmentStatus == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ShipmentStatus");
            }
        }
    }
}

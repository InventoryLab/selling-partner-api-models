// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.Orders.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The order items list along with the order ID.
    /// </summary>
    public partial class OrderItemsList
    {
        /// <summary>
        /// Initializes a new instance of the OrderItemsList class.
        /// </summary>
        public OrderItemsList()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OrderItemsList class.
        /// </summary>
        /// <param name="amazonOrderId">An Amazon-defined order identifier, in
        /// 3-7-7 format.</param>
        /// <param name="nextToken">When present and not empty, pass this
        /// string token in the next request to return the next response
        /// page.</param>
        public OrderItemsList(IList<OrderItem> orderItems, string amazonOrderId, string nextToken = default(string))
        {
            OrderItems = orderItems;
            NextToken = nextToken;
            AmazonOrderId = amazonOrderId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "OrderItems")]
        public IList<OrderItem> OrderItems { get; set; }

        /// <summary>
        /// Gets or sets when present and not empty, pass this string token in
        /// the next request to return the next response page.
        /// </summary>
        [JsonProperty(PropertyName = "NextToken")]
        public string NextToken { get; set; }

        /// <summary>
        /// Gets or sets an Amazon-defined order identifier, in 3-7-7 format.
        /// </summary>
        [JsonProperty(PropertyName = "AmazonOrderId")]
        public string AmazonOrderId { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (OrderItems == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "OrderItems");
            }
            if (AmazonOrderId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AmazonOrderId");
            }
            if (OrderItems != null)
            {
                foreach (var element in OrderItems)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}

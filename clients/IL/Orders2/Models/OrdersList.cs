// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.Orders.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// A list of orders along with additional information to make subsequent
    /// API calls.
    /// </summary>
    public partial class OrdersList
    {
        /// <summary>
        /// Initializes a new instance of the OrdersList class.
        /// </summary>
        public OrdersList()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OrdersList class.
        /// </summary>
        /// <param name="nextToken">When present and not empty, pass this
        /// string token in the next request to return the next response
        /// page.</param>
        /// <param name="lastUpdatedBefore">A date used for selecting orders
        /// that were last updated before (or at) a specified time. An update
        /// is defined as any change in order status, including the creation of
        /// a new order. Includes updates made by Amazon and by the seller. All
        /// dates must be in ISO 8601 format.</param>
        /// <param name="createdBefore">A date used for selecting orders
        /// created before (or at) a specified time. Only orders placed before
        /// the specified time are returned. The date must be in ISO 8601
        /// format.</param>
        public OrdersList(IList<Order> orders, string nextToken = default(string), string lastUpdatedBefore = default(string), string createdBefore = default(string))
        {
            Orders = orders;
            NextToken = nextToken;
            LastUpdatedBefore = lastUpdatedBefore;
            CreatedBefore = createdBefore;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Orders")]
        public IList<Order> Orders { get; set; }

        /// <summary>
        /// Gets or sets when present and not empty, pass this string token in
        /// the next request to return the next response page.
        /// </summary>
        [JsonProperty(PropertyName = "NextToken")]
        public string NextToken { get; set; }

        /// <summary>
        /// Gets or sets a date used for selecting orders that were last
        /// updated before (or at) a specified time. An update is defined as
        /// any change in order status, including the creation of a new order.
        /// Includes updates made by Amazon and by the seller. All dates must
        /// be in ISO 8601 format.
        /// </summary>
        [JsonProperty(PropertyName = "LastUpdatedBefore")]
        public string LastUpdatedBefore { get; set; }

        /// <summary>
        /// Gets or sets a date used for selecting orders created before (or
        /// at) a specified time. Only orders placed before the specified time
        /// are returned. The date must be in ISO 8601 format.
        /// </summary>
        [JsonProperty(PropertyName = "CreatedBefore")]
        public string CreatedBefore { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Orders == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Orders");
            }
            if (Orders != null)
            {
                foreach (var element in Orders)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}

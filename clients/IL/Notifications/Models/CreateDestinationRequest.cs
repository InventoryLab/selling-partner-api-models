// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.Notifications.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The request schema for the createDestination operation.
    /// </summary>
    public partial class CreateDestinationRequest
    {
        /// <summary>
        /// Initializes a new instance of the CreateDestinationRequest class.
        /// </summary>
        public CreateDestinationRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CreateDestinationRequest class.
        /// </summary>
        /// <param name="resourceSpecification">The information required to
        /// create a destination resource. Applications should use one resource
        /// type (sqs or eventBridge) per destination.</param>
        /// <param name="name">A developer-defined name to help identify this
        /// destination.</param>
        public CreateDestinationRequest(DestinationResourceSpecification resourceSpecification, string name)
        {
            ResourceSpecification = resourceSpecification;
            Name = name;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the information required to create a destination
        /// resource. Applications should use one resource type (sqs or
        /// eventBridge) per destination.
        /// </summary>
        [JsonProperty(PropertyName = "resourceSpecification")]
        public DestinationResourceSpecification ResourceSpecification { get; set; }

        /// <summary>
        /// Gets or sets a developer-defined name to help identify this
        /// destination.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ResourceSpecification == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ResourceSpecification");
            }
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (ResourceSpecification != null)
            {
                ResourceSpecification.Validate();
            }
        }
    }
}

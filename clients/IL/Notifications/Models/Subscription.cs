// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.Notifications.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Represents a subscription to receive notifications.
    /// </summary>
    public partial class Subscription
    {
        /// <summary>
        /// Initializes a new instance of the Subscription class.
        /// </summary>
        public Subscription()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Subscription class.
        /// </summary>
        /// <param name="subscriptionId">The subscription identifier generated
        /// when the subscription is created.</param>
        /// <param name="payloadVersion">The version of the payload object to
        /// be used in the notification.</param>
        /// <param name="destinationId">The identifier for the destination
        /// where notifications will be delivered.</param>
        public Subscription(string subscriptionId, string payloadVersion, string destinationId)
        {
            SubscriptionId = subscriptionId;
            PayloadVersion = payloadVersion;
            DestinationId = destinationId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the subscription identifier generated when the
        /// subscription is created.
        /// </summary>
        [JsonProperty(PropertyName = "subscriptionId")]
        public string SubscriptionId { get; set; }

        /// <summary>
        /// Gets or sets the version of the payload object to be used in the
        /// notification.
        /// </summary>
        [JsonProperty(PropertyName = "payloadVersion")]
        public string PayloadVersion { get; set; }

        /// <summary>
        /// Gets or sets the identifier for the destination where notifications
        /// will be delivered.
        /// </summary>
        [JsonProperty(PropertyName = "destinationId")]
        public string DestinationId { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (SubscriptionId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SubscriptionId");
            }
            if (PayloadVersion == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PayloadVersion");
            }
            if (DestinationId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DestinationId");
            }
        }
    }
}

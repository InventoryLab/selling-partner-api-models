// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.Notifications.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The information required to create a destination resource. Applications
    /// should use one resource type (sqs or eventBridge) per destination.
    /// </summary>
    public partial class DestinationResourceSpecification
    {
        /// <summary>
        /// Initializes a new instance of the DestinationResourceSpecification
        /// class.
        /// </summary>
        public DestinationResourceSpecification()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DestinationResourceSpecification
        /// class.
        /// </summary>
        /// <param name="sqs">The information required to create an Amazon
        /// Simple Queue Service (SQS) queue destination.</param>
        /// <param name="eventBridge">The information required to create an
        /// Amazon EventBridge destination.</param>
        public DestinationResourceSpecification(SqsResource sqs = default(SqsResource), EventBridgeResourceSpecification eventBridge = default(EventBridgeResourceSpecification))
        {
            Sqs = sqs;
            EventBridge = eventBridge;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the information required to create an Amazon Simple
        /// Queue Service (SQS) queue destination.
        /// </summary>
        [JsonProperty(PropertyName = "sqs")]
        public SqsResource Sqs { get; set; }

        /// <summary>
        /// Gets or sets the information required to create an Amazon
        /// EventBridge destination.
        /// </summary>
        [JsonProperty(PropertyName = "eventBridge")]
        public EventBridgeResourceSpecification EventBridge { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Sqs != null)
            {
                Sqs.Validate();
            }
            if (EventBridge != null)
            {
                EventBridge.Validate();
            }
        }
    }
}

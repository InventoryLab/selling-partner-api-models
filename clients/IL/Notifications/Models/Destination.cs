// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.Notifications.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Represents a destination created when you call the createDestination
    /// operation.
    /// </summary>
    public partial class Destination
    {
        /// <summary>
        /// Initializes a new instance of the Destination class.
        /// </summary>
        public Destination()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Destination class.
        /// </summary>
        /// <param name="name">The developer-defined name for this
        /// destination.</param>
        /// <param name="destinationId">The destination identifier generated
        /// when you created the destination.</param>
        /// <param name="resource">The resource that will receive notifications
        /// associated with this destination.</param>
        public Destination(string name, string destinationId, DestinationResource resource)
        {
            Name = name;
            DestinationId = destinationId;
            Resource = resource;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the developer-defined name for this destination.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the destination identifier generated when you created
        /// the destination.
        /// </summary>
        [JsonProperty(PropertyName = "destinationId")]
        public string DestinationId { get; set; }

        /// <summary>
        /// Gets or sets the resource that will receive notifications
        /// associated with this destination.
        /// </summary>
        [JsonProperty(PropertyName = "resource")]
        public DestinationResource Resource { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (DestinationId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DestinationId");
            }
            if (Resource == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Resource");
            }
            if (Name != null)
            {
                if (Name.Length > 256)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "Name", 256);
                }
            }
            if (Resource != null)
            {
                Resource.Validate();
            }
        }
    }
}

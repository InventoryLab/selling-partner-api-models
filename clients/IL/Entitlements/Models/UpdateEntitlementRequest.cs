// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.Entitlements.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The request schema for the updateEntitlement operation.
    /// </summary>
    public partial class UpdateEntitlementRequest
    {
        /// <summary>
        /// Initializes a new instance of the UpdateEntitlementRequest class.
        /// </summary>
        public UpdateEntitlementRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UpdateEntitlementRequest class.
        /// </summary>
        /// <param name="entitlementStatus">The status of entitlement. Possible
        /// values include: 'ENROLLED', 'CANCELED'</param>
        /// <param name="validityDate">The entitlement status validity date.
        /// This is required for ENROLLED status.</param>
        public UpdateEntitlementRequest(string entitlementStatus, System.DateTime? validityDate = default(System.DateTime?))
        {
            EntitlementStatus = entitlementStatus;
            ValidityDate = validityDate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the status of entitlement. Possible values include:
        /// 'ENROLLED', 'CANCELED'
        /// </summary>
        [JsonProperty(PropertyName = "entitlementStatus")]
        public string EntitlementStatus { get; set; }

        /// <summary>
        /// Gets or sets the entitlement status validity date. This is required
        /// for ENROLLED status.
        /// </summary>
        [JsonProperty(PropertyName = "validityDate")]
        public System.DateTime? ValidityDate { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (EntitlementStatus == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "EntitlementStatus");
            }
        }
    }
}

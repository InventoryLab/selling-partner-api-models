// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.Tokens.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Model of a restricted resource.
    /// </summary>
    public partial class RestrictedResource
    {
        /// <summary>
        /// Initializes a new instance of the RestrictedResource class.
        /// </summary>
        public RestrictedResource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RestrictedResource class.
        /// </summary>
        /// <param name="method">The HTTP method used with the restricted
        /// resource. Possible values include: 'GET', 'PUT', 'POST',
        /// 'DELETE'</param>
        /// <param name="path">The path from a restricted operation. This could
        /// be:
        ///
        /// - A specific path containing a seller's order ID, for example
        /// ```/orders/v0/orders/902-3159896-1390916/address```.
        ///
        /// - A generic path that does not contain a seller's order ID, for
        /// example```/orders/v0/orders/{orderId}/address```).</param>
        public RestrictedResource(string method, string path)
        {
            Method = method;
            Path = path;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the HTTP method used with the restricted resource.
        /// Possible values include: 'GET', 'PUT', 'POST', 'DELETE'
        /// </summary>
        [JsonProperty(PropertyName = "method")]
        public string Method { get; set; }

        /// <summary>
        /// Gets or sets the path from a restricted operation. This could be:
        ///
        /// - A specific path containing a seller's order ID, for example
        /// ```/orders/v0/orders/902-3159896-1390916/address```.
        ///
        /// - A generic path that does not contain a seller's order ID, for
        /// example```/orders/v0/orders/{orderId}/address```).
        /// </summary>
        [JsonProperty(PropertyName = "path")]
        public string Path { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Method == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Method");
            }
            if (Path == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Path");
            }
        }
    }
}

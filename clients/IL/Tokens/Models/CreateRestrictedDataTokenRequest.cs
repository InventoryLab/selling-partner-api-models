// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.Tokens.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The request schema for the createRestrictedDataToken operation.
    /// </summary>
    public partial class CreateRestrictedDataTokenRequest
    {
        /// <summary>
        /// Initializes a new instance of the CreateRestrictedDataTokenRequest
        /// class.
        /// </summary>
        public CreateRestrictedDataTokenRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CreateRestrictedDataTokenRequest
        /// class.
        /// </summary>
        /// <param name="restrictedResources">A list of restricted resources.
        /// Maximum: 50</param>
        /// <param name="targetApplication">The application ID for the target
        /// application to which access is being delegated.</param>
        public CreateRestrictedDataTokenRequest(IList<RestrictedResource> restrictedResources, string targetApplication = default(string))
        {
            TargetApplication = targetApplication;
            RestrictedResources = restrictedResources;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the application ID for the target application to which
        /// access is being delegated.
        /// </summary>
        [JsonProperty(PropertyName = "targetApplication")]
        public string TargetApplication { get; set; }

        /// <summary>
        /// Gets or sets a list of restricted resources.
        /// Maximum: 50
        /// </summary>
        [JsonProperty(PropertyName = "restrictedResources")]
        public IList<RestrictedResource> RestrictedResources { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (RestrictedResources == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "RestrictedResources");
            }
            if (RestrictedResources != null)
            {
                foreach (var element in RestrictedResources)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}

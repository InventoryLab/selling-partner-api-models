// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.Tokens
{
    using Microsoft.Rest;
    using Models;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// The Selling Partner API for Tokens provides a secure way to access a
    /// customers's PII (Personally Identifiable Information). You can call the
    /// Tokens API to get a Restricted Data Token (RDT) for one or more
    /// restricted resources that you specify. The RDT authorizes you to make
    /// subsequent requests to access these restricted resources.
    /// </summary>
    public partial interface ITokensClient : System.IDisposable
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        System.Uri BaseUri { get; set; }

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        JsonSerializerSettings SerializationSettings { get; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        JsonSerializerSettings DeserializationSettings { get; }


        /// <summary>
        /// Returns a Restricted Data Token (RDT) for one or more restricted
        /// resources that you specify. A restricted resource is the HTTP
        /// method and path from a restricted operation that returns Personally
        /// Identifiable Information (PII). See the Tokens API Use Case Guide
        /// for a list of restricted operations. Use the RDT returned here as
        /// the access token in subsequent calls to the corresponding
        /// restricted operations.
        ///
        /// The path of a restricted resource can be:
        /// - A specific path containing a seller's order ID, for example
        /// ```/orders/v0/orders/902-3159896-1390916/address```. The returned
        /// RDT authorizes a subsequent call to the getOrderAddress operation
        /// of the Orders API for that specific order only. For example, ```GET
        /// /orders/v0/orders/902-3159896-1390916/address```.
        /// - A generic path that does not contain a seller's order ID, for
        /// example```/orders/v0/orders/{orderId}/address```). The returned RDT
        /// authorizes subsequent calls to the getOrderAddress operation for
        /// *any* of a seller's order IDs. For example, ```GET
        /// /orders/v0/orders/902-3159896-1390916/address``` and ```GET
        /// /orders/v0/orders/483-3488972-0896720/address```
        ///
        /// **Usage Plans:**
        ///
        /// | Plan type | Rate (requests per second) | Burst |
        /// | ---- | ---- | ---- |
        /// |Default| 1 | 10 |
        /// |Selling partner specific| Variable | Variable |
        ///
        /// The x-amzn-RateLimit-Limit response header returns the usage plan
        /// rate limits that were applied to the requested operation. Rate
        /// limits for some selling partners will vary from the default rate
        /// and burst shown in the table above. For more information, see
        /// "Usage Plans and Rate Limits" in the Selling Partner API
        /// documentation.
        /// </summary>
        /// <param name='body'>
        /// The restricted data token request details.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,CreateRestrictedDataTokenHeaders>> CreateRestrictedDataTokenWithHttpMessagesAsync(CreateRestrictedDataTokenRequest body, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

    }
}

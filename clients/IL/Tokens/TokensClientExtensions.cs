// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.Tokens
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for TokensClient.
    /// </summary>
    public static partial class TokensClientExtensions
    {
            /// <summary>
            /// Returns a Restricted Data Token (RDT) for one or more restricted resources
            /// that you specify. A restricted resource is the HTTP method and path from a
            /// restricted operation that returns Personally Identifiable Information
            /// (PII), plus a dataElements value that indicates the type of PII requested.
            /// See the Tokens API Use Case Guide for a list of restricted operations. Use
            /// the RDT returned here as the access token in subsequent calls to the
            /// corresponding restricted operations.
            ///
            /// **Usage Plans:**
            ///
            /// | Plan type | Rate (requests per second) | Burst |
            /// | ---- | ---- | ---- |
            /// |Default| 1 | 10 |
            /// |Selling partner specific| Variable | Variable |
            ///
            /// The x-amzn-RateLimit-Limit response header returns the usage plan rate
            /// limits that were applied to the requested operation. Rate limits for some
            /// selling partners will vary from the default rate and burst shown in the
            /// table above. For more information, see "Usage Plans and Rate Limits" in the
            /// Selling Partner API documentation.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// The restricted data token request details.
            /// </param>
            public static object CreateRestrictedDataToken(this ITokensClient operations, CreateRestrictedDataTokenRequest body)
            {
                return operations.CreateRestrictedDataTokenAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns a Restricted Data Token (RDT) for one or more restricted resources
            /// that you specify. A restricted resource is the HTTP method and path from a
            /// restricted operation that returns Personally Identifiable Information
            /// (PII), plus a dataElements value that indicates the type of PII requested.
            /// See the Tokens API Use Case Guide for a list of restricted operations. Use
            /// the RDT returned here as the access token in subsequent calls to the
            /// corresponding restricted operations.
            ///
            /// **Usage Plans:**
            ///
            /// | Plan type | Rate (requests per second) | Burst |
            /// | ---- | ---- | ---- |
            /// |Default| 1 | 10 |
            /// |Selling partner specific| Variable | Variable |
            ///
            /// The x-amzn-RateLimit-Limit response header returns the usage plan rate
            /// limits that were applied to the requested operation. Rate limits for some
            /// selling partners will vary from the default rate and burst shown in the
            /// table above. For more information, see "Usage Plans and Rate Limits" in the
            /// Selling Partner API documentation.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// The restricted data token request details.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> CreateRestrictedDataTokenAsync(this ITokensClient operations, CreateRestrictedDataTokenRequest body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateRestrictedDataTokenWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}

// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.FBAInboundEligibility.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The response object which contains the ASIN, marketplaceId if required,
    /// eligibility program, the eligibility status (boolean), and a list of
    /// ineligibility reason codes.
    /// </summary>
    public partial class ItemEligibilityPreview
    {
        /// <summary>
        /// Initializes a new instance of the ItemEligibilityPreview class.
        /// </summary>
        public ItemEligibilityPreview()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ItemEligibilityPreview class.
        /// </summary>
        /// <param name="asin">The ASIN for which eligibility was
        /// determined.</param>
        /// <param name="program">The program for which eligibility was
        /// determined. Possible values include: 'INBOUND',
        /// 'COMMINGLING'</param>
        /// <param name="isEligibleForProgram">Indicates if the item is
        /// eligible for the program.</param>
        /// <param name="marketplaceId">The marketplace for which eligibility
        /// was determined.</param>
        /// <param name="ineligibilityReasonList">Potential Ineligibility
        /// Reason Codes.</param>
        public ItemEligibilityPreview(string asin, string program, bool isEligibleForProgram, string marketplaceId = default(string), IList<string> ineligibilityReasonList = default(IList<string>))
        {
            Asin = asin;
            MarketplaceId = marketplaceId;
            Program = program;
            IsEligibleForProgram = isEligibleForProgram;
            IneligibilityReasonList = ineligibilityReasonList;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the ASIN for which eligibility was determined.
        /// </summary>
        [JsonProperty(PropertyName = "asin")]
        public string Asin { get; set; }

        /// <summary>
        /// Gets or sets the marketplace for which eligibility was determined.
        /// </summary>
        [JsonProperty(PropertyName = "marketplaceId")]
        public string MarketplaceId { get; set; }

        /// <summary>
        /// Gets or sets the program for which eligibility was determined.
        /// Possible values include: 'INBOUND', 'COMMINGLING'
        /// </summary>
        [JsonProperty(PropertyName = "program")]
        public string Program { get; set; }

        /// <summary>
        /// Gets or sets indicates if the item is eligible for the program.
        /// </summary>
        [JsonProperty(PropertyName = "isEligibleForProgram")]
        public bool IsEligibleForProgram { get; set; }

        /// <summary>
        /// Gets or sets potential Ineligibility Reason Codes.
        /// </summary>
        [JsonProperty(PropertyName = "ineligibilityReasonList")]
        public IList<string> IneligibilityReasonList { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Asin == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Asin");
            }
            if (Program == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Program");
            }
        }
    }
}

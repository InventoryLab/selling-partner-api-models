// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IL.Library.Amazon.SPAPI.Reports.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Encryption details required for decryption of a report document's
    /// contents.
    /// </summary>
    public partial class ReportDocumentEncryptionDetails
    {
        /// <summary>
        /// Initializes a new instance of the ReportDocumentEncryptionDetails
        /// class.
        /// </summary>
        public ReportDocumentEncryptionDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ReportDocumentEncryptionDetails
        /// class.
        /// </summary>
        /// <param name="initializationVector">The vector to decrypt the
        /// document contents using Cipher Block Chaining (CBC).</param>
        /// <param name="key">The encryption key used to decrypt the document
        /// contents.</param>
        public ReportDocumentEncryptionDetails(string initializationVector, string key)
        {
            InitializationVector = initializationVector;
            Key = key;
            CustomInit();
        }
        /// <summary>
        /// Static constructor for ReportDocumentEncryptionDetails class.
        /// </summary>
        static ReportDocumentEncryptionDetails()
        {
            Standard = "AES";
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the vector to decrypt the document contents using
        /// Cipher Block Chaining (CBC).
        /// </summary>
        [JsonProperty(PropertyName = "initializationVector")]
        public string InitializationVector { get; set; }

        /// <summary>
        /// Gets or sets the encryption key used to decrypt the document
        /// contents.
        /// </summary>
        [JsonProperty(PropertyName = "key")]
        public string Key { get; set; }

        /// <summary>
        /// The encryption standard required to decrypt the document contents.
        /// </summary>
        [JsonProperty(PropertyName = "standard")]
        public static string Standard { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (InitializationVector == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "InitializationVector");
            }
            if (Key == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Key");
            }
        }
    }
}
